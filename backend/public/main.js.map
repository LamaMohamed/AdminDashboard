{"version":3,"sources":["./src/app/shared/api2.service.ts","./src/app/auth/_services/admin.service.ts","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/shared/mime-type.validator.ts","./src/app/components/restaurants-list/restaurants-list.component.ts","./src/app/components/restaurants-list/restaurants-list.component.html","./src/app/auth/_services/autentication.service.ts","./src/environments/environment.ts","./src/app/components/update-hotel/update-hotel.component.ts","./src/app/components/update-hotel/update-hotel.component.html","./src/app/components/hotels-list/hotels-list.component.ts","./src/app/components/hotels-list/hotels-list.component.html","./src/app/auth/auth.guard.ts","./src/app/components/update-restaurant/update-restaurant.component.ts","./src/app/components/update-restaurant/update-restaurant.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/components/add-restaurant/add-restaurant.component.ts","./src/app/components/add-restaurant/add-restaurant.component.html","./src/app/app.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/shared/api.service.ts","./src/app/shared/api3.service.ts","./src/app/auth/_helpers/fake-backend.ts","./src/app/auth/_helpers/jwt.interceptor.ts","./src/app/components/add-hotel/add-hotel.component.ts","./src/app/components/add-hotel/add-hotel.component.html","./src/app/auth/_helpers/error.interceptor.ts","./src/app/components/users-list/users-list.component.ts","./src/app/components/users-list/users-list.component.html","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/app/shared/api-user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\r\nimport { Injectable } from '@angular/core';\r\nimport { Hotel } from './hotel';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Subject } from \"rxjs\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Api2Service {\r\n  private hotels: Hotel[] = [];\r\n  private hotelsUpdated = new Subject<Hotel[]>();\r\n  endpoint: string = 'http://localhost:8000/api/hotel';\r\n/*   endpointCategory: string = 'http://localhost:8010/api'; */\r\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n  constructor(private http: HttpClient,private router: Router) { }\r\n\r\n   // Add hotel\r\n\r\n   AddHotel(name:string,style:Array<string>) {\r\n    const hotel: Hotel = { name:name ,style:style};\r\n    this.http\r\n      .post<{ message: string; id: string }>(\r\n        `${this.endpoint}/add-hotel`,\r\n        hotel\r\n      )\r\n      .subscribe(responseData => {\r\n        // const id = responseData.id;\r\n        // hotel.id = id;\r\n        this.hotels.push(hotel);\r\n        this.hotelsUpdated.next([...this.hotels]);\r\n        this.router.navigate([\"/hotel-list\"]);\r\n      });\r\n  }\r\n   \r\n  //  AddHotel(name: string): Observable<any> {\r\n  //   var formData: any = new FormData(); \r\n  //   formData.append(\"name\", name);\r\n  //   return this.http.post<Hotel>(`${this.endpoint}/add-hotel`, formData, {\r\n  //     reportProgress: true,\r\n  //     observe: 'events'\r\n  //   })\r\n  // }\r\n  //  AddHotel(data: Hotel): Observable<any> {\r\n  //   let API_URL = `${this.endpoint}/add-hotel`;\r\n  //   return this.http.post(API_URL, data)\r\n  //     .pipe(\r\n  //       catchError(this.errorMgmt)\r\n  //     ) \r\n  // }\r\n   // Get all hotels\r\n  \r\n  GetHotels() {\r\n    return this.http.get(`${this.endpoint}`);\r\n  }\r\n   // Get all hotel categories\r\n /*   GetHotelCategories() { \r\n    return this.http.get(`${this.endpointCategory}`);\r\n  }\r\n */\r\n   // Get restaurant\r\n   GetHotel(id): Observable<any> {\r\n    let API_URL = `${this.endpoint}/read-hotel/${id}`;\r\n    return this.http.get(API_URL, { headers: this.headers })\r\n      .pipe(\r\n        map((res: Response) => {\r\n          return res || {}\r\n        }),\r\n        catchError(this.errorMgmt)\r\n      )\r\n  }\r\n    // Update hotel\r\n    UpdateHotel(id, data): Observable<any> {\r\n      let API_URL = `${this.endpoint}/update-hotel/${id}`;\r\n      return this.http.put(API_URL, data, { headers: this.headers })\r\n        .pipe(\r\n          catchError(this.errorMgmt)\r\n        )\r\n    }\r\n  \r\n     // Delete hotel\r\n     DeleteHotel(id): Observable<any> {\r\n      var API_URL = `${this.endpoint}/delete-hotel/${id}`;\r\n      return this.http.delete(API_URL)\r\n        .pipe(\r\n          catchError(this.errorMgmt)\r\n        )\r\n    }\r\n  \r\n     // Error handling \r\n  errorMgmt(error: HttpErrorResponse) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n\r\n\r\n\r\n  ","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { Admin } from '../_model/admin';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AdminService {\r\n        constructor(private http: HttpClient) { }\r\n    \r\n        getAll() {\r\n            return this.http.get<Admin[]>(`${environment.apiUrl}/users`);\r\n        }\r\n    }\r\n","import { Component, ViewChild, HostListener, OnInit, Output } from '@angular/core';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport * as EventEmitter from 'events';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  opened = true;\r\n\r\n\r\n  @ViewChild('sidenav', { static: true }) sidenav: MatSidenav;\r\n /*  @Output('sidenav') Snav: MatSidenav; */\r\n  ngOnInit(): void {\r\n    console.log(window.innerWidth)\r\n    if (window.innerWidth < 768) {\r\n      this.sidenav.fixedTopGap = 55;\r\n      this.opened = false;\r\n    } else {\r\n      this.sidenav.fixedTopGap = 55;\r\n      this.opened = true;\r\n    }\r\n  }\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    if (event.target.innerWidth < 768) {\r\n      this.sidenav.fixedTopGap = 55;\r\n      this.opened = false;\r\n    } else {\r\n      this.sidenav.fixedTopGap = 55\r\n      this.opened = true;\r\n    }\r\n  }\r\n\r\n  isBiggerScreen() {\r\n    const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n    if (width < 768) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container > \r\n    <!-- Sidenav -->\r\n    <mat-sidenav [mode]=\"isBiggerScreen() ? 'over' : 'side'\"  #sidenav [(opened)]=\"opened\" [fixedInViewport]=\"true\"\r\n      [fixedTopGap]>\r\n      <mat-nav-list >\r\n        <a mat-list-item routerLinkActive=\"active\" routerLink=\"/add-restaurant\">\r\n          <mat-icon>add</mat-icon> Add Restaurant\r\n        </a>\r\n        <a mat-list-item routerLinkActive=\"active\" routerLink=\"/restaurant-list\">\r\n          <mat-icon>format_list_bulleted</mat-icon> View Restaurants\r\n        </a>\r\n        <a mat-list-item routerLinkActive=\"active\" routerLink=\"/add-hotel\">\r\n          <mat-icon>add</mat-icon> Add Hotel\r\n        </a>\r\n        <a mat-list-item routerLinkActive=\"active\" routerLink=\"/hotel-list\">\r\n          <mat-icon>format_list_bulleted</mat-icon> View Hotels\r\n        </a>\r\n        <a mat-list-item routerLinkActive=\"active\" routerLink=\"/user-list\">\r\n          <mat-icon>format_list_bulleted</mat-icon> View Users\r\n        </a>\r\n      </mat-nav-list>\r\n    </mat-sidenav>\r\n  \r\n    <!-- Main content -->\r\n    <mat-sidenav-content>\r\n      <router-outlet></router-outlet>\r\n    </mat-sidenav-content>\r\n  </mat-sidenav-container>","import { AbstractControl } from \"@angular/forms\";\r\nimport { Observable, Observer } from \"rxjs\";\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = Observable.create(\r\n    (observer: Observer<{ [key: string]: any }>) => {\r\n      fileReader.addEventListener(\"loadend\", () => {\r\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\r\n        let header = \"\";\r\n        let isValid = false;\r\n        for (let i = 0; i < arr.length; i++) {\r\n          header += arr[i].toString(16);\r\n        }\r\n        switch (header) {\r\n          case \"89504e47\":\r\n            isValid = true;\r\n            break;\r\n          case \"ffd8ffe0\":\r\n          case \"ffd8ffe1\":\r\n          case \"ffd8ffe2\":\r\n          case \"ffd8ffe3\":\r\n          case \"ffd8ffe8\":\r\n            isValid = true;\r\n            break;\r\n          default:\r\n            isValid = false; // Or you can use the blob.type as fallback\r\n            break;\r\n        }\r\n        if (isValid) {\r\n          observer.next(null);\r\n        } else {\r\n          observer.next({ invalidMimeType: true });\r\n        }\r\n        observer.complete();\r\n      });\r\n      fileReader.readAsArrayBuffer(file);\r\n    }\r\n  );\r\n  return frObs;\r\n};\r\n","import { Restaurant } from './../../shared/restaurant';\r\nimport { ApiService } from './../../shared/api.service';\r\nimport { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { MatPaginator} from '@angular/material/paginator'\r\nimport {MatTableDataSource } from '@angular/material/table'\r\nimport {MatChipsModule} from '@angular/material/chips';\r\n\r\n@Component({\r\n  selector: 'app-restaurants-list',\r\n  templateUrl: './restaurants-list.component.html',\r\n  styleUrls: ['./restaurants-list.component.css']\r\n})\r\nexport class RestaurantsListComponent implements OnInit {\r\n   //restaurants:Restaurant[]=[];\r\n  RestaurantData: any = [];\r\n  dataSource: MatTableDataSource<Restaurant>;\r\n  @ViewChild(MatPaginator,{ static: false }) paginator: MatPaginator;\r\n  displayedColumns: string[] = [ 'name','price_range', 'image_path', 'restaurant_features', 'action'];\r\n\r\n  constructor(private restaurantApi: ApiService) {\r\n    this.restaurantApi. GetRestaurants().subscribe(data => {\r\n      this.RestaurantData = data;\r\n      this.dataSource = new MatTableDataSource<Restaurant>(this.RestaurantData);\r\n      setTimeout(() => {\r\n        this.dataSource.paginator = this.paginator;\r\n      }, 0);\r\n    })    \r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  DeleteRestaurant(index: number, e){\r\n    if(window.confirm('Are you sure')) {\r\n      const data = this.dataSource.data;\r\n      data.splice((this.paginator.pageIndex * this.paginator.pageSize) + index, 1);\r\n      this.dataSource.data = data;\r\n      this.restaurantApi.DeleteRestaurant(e._id).subscribe()\r\n    }\r\n  }\r\n\r\n}\r\n","<!-- Title group  -->\r\n<div class=\"title-group\">\r\n    <h1 class=\"mat-h1\">Restaurants List</h1>\r\n    <mat-divider fxFlex=\"1 0\"></mat-divider>\r\n  </div>\r\n  \r\n  <p *ngIf=\"RestaurantData.length <= 0\" class=\"no-data\">There is no restaurant added yet!</p>\r\n  \r\n  <div class=\"container\" *ngIf=\"RestaurantData.length > 0\">\r\n    <div class=\"mat-elevation-z8\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n        \r\n  \r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef> Restaurant Name </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"price_range\">\r\n          <th mat-header-cell *matHeaderCellDef> Restaurant Price range </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.price_range}} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"image_path\">\r\n          <th mat-header-cell *matHeaderCellDef> Image </th>\r\n          <!-- <td mat-cell *matCellDef=\"let element\"> {{element.image_path}} </td> -->\r\n          <div class=\"image-post\">\r\n          <img mat-cell *matCellDef=\"let element\" [src]=\"element.image_path\" [alt]=\"element.image_path\" style=\"height: 5rem;width: 10rem;\">\r\n        </div>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"restaurant_features\">\r\n          <th mat-header-cell *matHeaderCellDef> Features </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.restaurant_features}} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"action\">\r\n          <th mat-header-cell *matHeaderCellDef> Action </th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index;\">\r\n            <button mat-raised-button color=\"primary\" class=\"push-right\"\r\n              [routerLink]=\"['/edit-student/', element._id]\">Edit</button>\r\n            <button mat-raised-button color=\"accent\" (click)=\"DeleteRestaurant(i, element)\">Delete</button>\r\n          </td>\r\n        </ng-container>\r\n  \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n  \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n    </div>\r\n  </div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '../../../environments/environment';\r\nimport { Admin } from '../_model/admin';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n    private currentUserSubject: BehaviorSubject<Admin>;\r\n    public currentUser: Observable<Admin>;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.currentUserSubject = new BehaviorSubject<Admin>(JSON.parse(localStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue(): Admin {\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n    login(username: string, password: string) {\r\n        return this.http.post<any>(`${environment.apiUrl}/users/authenticate`, { username, password })\r\n            .pipe(map(user => {\r\n                // login successful if there's a jwt token in the response\r\n                if (user && user.token) {\r\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                    localStorage.setItem('currentUser', JSON.stringify(user));\r\n                    this.currentUserSubject.next(user);\r\n                }\r\n\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout() {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentUser');\r\n        this.currentUserSubject.next(null);\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'http://localhost:4200'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Router, ActivatedRoute } from '@angular/router';\r\nimport { Component, OnInit, ViewChild, NgZone } from '@angular/core';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { Api2Service } from './../../shared/api2.service';\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\n\r\nexport interface Subject {\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-update-hotel',\r\n  templateUrl: './update-hotel.component.html',\r\n  styleUrls: ['./update-hotel.component.css']\r\n})\r\nexport class UpdateHotelComponent implements OnInit {\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  @ViewChild('chipList') chipList;\r\n  @ViewChild('resethotelForm') myNgForm;\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  hotelForm: FormGroup;\r\n  subjectArray: Subject[] = [];\r\n  SectioinArray: any = ['A', 'B', 'C', 'D', 'E'];\r\n\r\n  ngOnInit() {\r\n    this.updateBookForm();\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private router: Router,\r\n    private ngZone: NgZone,\r\n    private actRoute: ActivatedRoute,\r\n    private hotelApi: Api2Service\r\n  ) { \r\n    var id = this.actRoute.snapshot.paramMap.get('id');\r\n    this.hotelApi.GetHotel(id).subscribe(data => {\r\n      console.log(data.subjects)\r\n      this.subjectArray = data.subjects;\r\n      this.hotelForm = this.fb.group({\r\n        name: [data.name, [Validators.required]],\r\n        booking: [data.booking, [Validators.required]],\r\n        map: [data.map, [Validators.required]],\r\n        Pricedeals: [data.Pricedeals],\r\n        rooms: [data.rooms, [Validators.required]],\r\n        images: [data.images]\r\n      })      \r\n    })    \r\n  }\r\n\r\n  /* Reactive book form */\r\n  updateBookForm() {\r\n    this.hotelForm = this.fb.group({\r\n      name: ['', [Validators.required]],\r\n      booking: ['', [Validators.required]],\r\n      map: ['', [Validators.required]],\r\n      Pricedeals: [''],\r\n      rooms: ['', [Validators.required]],\r\n      images: ['']\r\n    })\r\n  }\r\n\r\n  /* Add dynamic languages */\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n    // Add language\r\n    if ((value || '').trim() && this.subjectArray.length < 5) {\r\n      this.subjectArray.push({ name: value.trim() })\r\n    }\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n  }\r\n\r\n  /* Remove dynamic languages */\r\n  remove(subject: Subject): void {\r\n    const index = this.subjectArray.indexOf(subject);\r\n    if (index >= 0) {\r\n      this.subjectArray.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /* Date */\r\n  formatDate(e) {\r\n    var convertDate = new Date(e.target.value).toISOString().substring(0, 10);\r\n    this.hotelForm.get('dob').setValue(convertDate, {\r\n      onlyself: true\r\n    })\r\n  }\r\n\r\n  /* Get errors */\r\n  public handleError = (controlName: string, errorName: string) => {\r\n    return this.hotelForm.controls[controlName].hasError(errorName);\r\n  }\r\n\r\n  /* Update book */\r\n  updateHotelForm() {\r\n    console.log(this.hotelForm.value)\r\n    var id = this.actRoute.snapshot.paramMap.get('id');\r\n    if (window.confirm('Are you sure you want to update?')) {\r\n      this.hotelApi.UpdateHotel(id, this.hotelForm.value).subscribe( res => {\r\n        this.ngZone.run(() => this.router.navigateByUrl('/hotel-list'))\r\n      });\r\n    }\r\n  }\r\n  \r\n}\r\n","<!-- Title group  -->\r\n<div class=\"title-group\">\r\n    <h1 class=\"mat-h1\">Add Student</h1>\r\n    <mat-divider fxFlex=\"1 0\"></mat-divider>\r\n  </div>\r\n  \r\n  <!-- Form -->\r\n  <div class=\"inner-wrapper\">\r\n    <form [formGroup]=\"hotelForm\" (ngSubmit)=\"updateHotelForm()\" #resetStudentForm=\"ngForm\" novalidate>\r\n      <!-- Left block -->\r\n      <mat-card>\r\n        <div class=\"controlers-wrapper\">\r\n          <!-- Name -->\r\n          <mat-form-field class=\"example-full-width\">\r\n            <input matInput placeholder=\"Hotel name\" formControlName=\"name\">\r\n            <mat-error *ngIf=\"handleError('name', 'required')\">\r\n              You must provide a<strong>hotel name</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n  \r\n          <!-- Booking -->\r\n          <mat-form-field class=\"example-full-width\">\r\n            <input matInput placeholder=\"Booking\" formControlName=\"images\">\r\n            <mat-error *ngIf=\"handleError('images', 'required')\">\r\n              You must provide a<strong>hotel Images</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n  \r\n          <!-- Section -->\r\n   <!--        <mat-form-field>\r\n            <mat-label>Section</mat-label>\r\n            <mat-select [(value)]=\"selected\" formControlName=\"section\">\r\n              <mat-option [value]=\"sectioinArray\" *ngFor=\"let sectioinArray of SectioinArray\">{{sectioinArray}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"handleError('section', 'required')\">\r\n              Section is required\r\n            </mat-error>\r\n          </mat-form-field> -->\r\n        </div>\r\n      </mat-card>\r\n  \r\n      <!-- Right block -->\r\n      <mat-card>\r\n        <div class=\"controlers-wrapper\">\r\n          <!-- Add subjects -->\r\n          <mat-form-field class=\"multiple-items\">\r\n            <mat-chip-list #chipList>\r\n              <mat-chip *ngFor=\"let subjectArray of subjectArray\" [selectable]=\"selectable\" [removable]=\"removable\"\r\n                (removed)=\"remove(subjectArray)\">\r\n                {{subjectArray.name}}\r\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n              </mat-chip>\r\n              <input placeholder=\"Add Pricedeals\" [matChipInputFor]=\"chipList\"\r\n                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\r\n                (matChipInputTokenEnd)=\"add($event)\">\r\n            </mat-chip-list>\r\n            <i class=\"material-icons tooltip-info\" matTooltip=\"Enter subject name and press enter to add subjects\">\r\n              info\r\n            </i>\r\n          </mat-form-field>\r\n  \r\n          <!-- Date of birth -->\r\n          <mat-form-field>\r\n            <input matInput readonly [matDatepicker]=\"picker\" placeholder=\"Room\" formControlName=\"room\"\r\n              (dateChange)=\"formatDate($event)\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"handleError('room', 'required')\">\r\n              Number of rooms\r\n            </mat-error>\r\n          </mat-form-field>\r\n  \r\n          <!-- Gender -->\r\n          <div class=\"misc-bottom-padding\">\r\n            <mat-label>Class:</mat-label>\r\n            <mat-radio-group aria-label=\"Select an option\" formControlName=\"class\">\r\n              <mat-radio-button value=\"Male\">1</mat-radio-button>\r\n              <mat-radio-button value=\"Female\">2</mat-radio-button>\r\n              <mat-radio-button value=\"Female\">3</mat-radio-button>\r\n              <mat-radio-button value=\"Female\">4</mat-radio-button>\r\n              <mat-radio-button value=\"Female\">5</mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n  \r\n      <!-- Submit & Reset -->\r\n      <mat-card>\r\n        <div class=\"full-wrapper button-wrapper\">\r\n          <div class=\"button-wrapper\">\r\n            <button mat-flat-button color=\"warn\">Update</button>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n    </form>\r\n  </div>\r\n","import { Hotel } from './../../shared/hotel';\r\nimport { Api2Service } from './../../shared/api2.service';\r\nimport { Api3Service } from './../../shared/api3.service';\r\nimport { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { MatPaginator} from '@angular/material/paginator'\r\nimport {MatTableDataSource } from '@angular/material/table'\r\n\r\n@Component({\r\n  selector: 'app-hotels-list',\r\n  templateUrl: './hotels-list.component.html',\r\n  styleUrls: ['./hotels-list.component.css']\r\n})\r\nexport class HotelsListComponent implements OnInit {\r\n    HotelData: any = [];\r\n    dataSource: MatTableDataSource<Hotel>;\r\n    @ViewChild(MatPaginator,{ static: false }) paginator: MatPaginator;\r\n    displayedColumns: string[] = ['name', 'style', 'rooms', 'action'];\r\n\r\n  \r\n    constructor(private hotelApi: Api2Service,\r\n      private hotelCategoryApi: Api3Service) {\r\n      this.hotelApi.GetHotels().subscribe(data => {\r\n        this.HotelData = data;\r\n        this.dataSource = new MatTableDataSource<Hotel>(this.HotelData);\r\n        setTimeout(() => {\r\n          this.dataSource.paginator = this.paginator;\r\n        }, 0);\r\n      })\r\n    }\r\n  \r\n    ngOnInit() { }\r\n\r\n    DeleteHotel(index: number, e){\r\n      if(window.confirm('Are you sure')) {\r\n        const data = this.dataSource.data;\r\n        data.splice((this.paginator.pageIndex * this.paginator.pageSize) + index, 1);\r\n        this.dataSource.data = data;\r\n        this.hotelApi.DeleteHotel(e._id).subscribe()\r\n      }\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n","<!-- Title group  -->\r\n<div class=\"title-group\">\r\n    <h1 class=\"mat-h1\">Hotels List</h1>\r\n    <mat-divider fxFlex=\"1 0\"></mat-divider>\r\n  </div>\r\n  \r\n  <p *ngIf=\"HotelData.length <= 0\" class=\"no-data\">There is no hotel added yet!</p>\r\n  \r\n  <div class=\"container\" *ngIf=\"HotelData.length > 0\">\r\n    <div class=\"mat-elevation-z8\">\r\n      <table mat-table [dataSource]=\"dataSource\">\r\n        <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef> Hotel Name </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"rooms\">\r\n          <th mat-header-cell *matHeaderCellDef> Rooms </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.rooms}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"style\">\r\n          <th mat-header-cell *matHeaderCellDef> Style </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.style}} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"action\">\r\n          <th mat-header-cell *matHeaderCellDef> Action </th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index;\">\r\n            <button mat-raised-button color=\"primary\" class=\"push-right\"\r\n              [routerLink]=\"['/update-hotel/', element._id]\">Edit</button>\r\n            <button mat-raised-button color=\"accent\" (click)=\"DeleteHotel(i, element)\">Delete</button>\r\n          </td>\r\n        </ng-container>\r\n  \r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n  \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n    </div>\r\n  </div>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree,Router } from '@angular/router';\r\nimport { Observable } from 'rxjs-compat/observable';\r\nimport { AuthenticationService } from './_services/autentication.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n) { }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot){\r\n    const currentUser = this.authenticationService.currentUserValue;\r\n    if (currentUser) {\r\n        // logged in so return true\r\n        return true;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n    return false;\r\n}\r\n\r\n}\r\n  \r\n  \r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-update-restaurant',\r\n  templateUrl: './update-restaurant.component.html',\r\n  styleUrls: ['./update-restaurant.component.css']\r\n})\r\nexport class UpdateRestaurantComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>update-restaurant works!</p>\r\n","<mat-toolbar color=\"primary\" class=\"header\" >\r\n  <img class=\"logo\" src=\"https://static.tacdn.com/img2/brand_refresh/Tripadvisor_lockup_horizontal_secondary_registered.svg\">\r\n  <div>\r\n    <h1>Tripadvisor Records</h1>\r\n  </div> \r\n\r\n  <span class=\"nav-tool-items\">\r\n    <mat-icon (click)=\"sidenav.toggle()\" class=\"hamburger\">menu</mat-icon>\r\n  </span>\r\n  <a class=\"nav-item nav-link login\" *ngIf=\"!currentUser\" routerLink=\"/login\"><span style=\"font-size: 10px;color:black\"><i class=\"fas fa-lock\"></i></span> Login</a>\r\n  <a class=\"nav-item nav-link login\" *ngIf=\"currentUser\" (click)=\"logout()\"><span style=\"font-size: 10px;color:black\"><i class=\"fas fa-lock-open\"></i></span> Logout</a>\r\n</mat-toolbar>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n","import { Component, ViewChild, HostListener, OnInit, QueryList, Input } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from './auth/_services/autentication.service';\r\nimport { AdminService } from './auth/_services/admin.service';\r\nimport { Admin} from './auth/_model/admin';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title='admin-dashboard';\r\n  opened = true;\r\n  currentUser?: Admin;\r\n  loading = false;\r\n    users: Admin[];\r\n\r\n    @ViewChild('sidenav', { static: true }) sidenav: MatSidenav;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n    private adminService: AdminService\r\n) {\r\n    this.authenticationService.currentUser?.subscribe(x => this.currentUser = x);\r\n}\r\nlogout() {\r\n  this.authenticationService.logout();\r\n  this.router.navigate(['/login']);\r\n}\r\n \r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { mimeType } from './../../shared/mime-type.validator';\r\nimport { Component, OnInit, ViewChild, NgZone } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { ApiService } from './../../shared/api.service';\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\r\n\r\n\r\nexport interface Feature {\r\n  name: string;\r\n}\r\nexport interface Establishment {\r\n  name: string;\r\n}\r\nexport interface Meal {\r\n  name: string;\r\n}\r\nexport interface Cuisine {\r\n  name: string;\r\n}\r\nexport interface Dietary {\r\n  name: string;\r\n}\r\n@Component({\r\n  selector: 'app-add-restaurant',\r\n  templateUrl: './add-restaurant.component.html',\r\n  styleUrls: ['./add-restaurant.component.css']\r\n})\r\nexport class AddRestaurantComponent implements OnInit {\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n\r\n  @ViewChild('chipList') chipList;\r\n  @ViewChild('chipList2') chipList2;\r\n  @ViewChild('chipList3') chipList3;\r\n  @ViewChild('chipList4') chipList4;\r\n  @ViewChild('chipList5') chipList5;\r\n  @ViewChild('resetRestaurantForm') myNgForm;\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  restaurantForm: FormGroup;\r\n  imagePreview: string;\r\n  featuresArray: Feature[] = [];\r\n  establishmentArray: Establishment[] = [];\r\n  cuisineArray: Cuisine[] = [];\r\n  dietaryArray: Dietary[] = [];\r\n  mealArray: Meal[] = [];\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.submitBookForm();\r\n  }\r\n  constructor(public fb: FormBuilder,\r\n    public router: Router,\r\n    private ngZone: NgZone,\r\n    public restaurantApi: ApiService) {\r\n  }\r\n  /* Reactive book form */\r\n  submitBookForm() {\r\n    this.restaurantForm = this.fb.group({\r\n      name: ['', [Validators.required]],\r\n      image_path: ['', {\r\n        Validators: [Validators.required],\r\n         asyncValidators: [mimeType]\r\n      }],\r\n      restaurant_features: [this.featuresArray],\r\n      establishment_type: [this.establishmentArray],\r\n      meals: [this.mealArray],\r\n      price_range: ['', [Validators.required]],\r\n      cuisine: [this.cuisineArray],\r\n      dietary_restrictions: [this.dietaryArray],\r\n      location: ['', [Validators.required]],\r\n      phone: ['', [Validators.required]],\r\n\r\n    })\r\n  }\r\n  /* Add restaurant feature */\r\n  add(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n    // Add feature\r\n    if ((value || '').trim() && this.featuresArray.length < 10) {\r\n      this.featuresArray.push({ name: value.trim() })\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n  }\r\n  /* Remove restaurant feature */\r\n  remove(feature: Feature): void {\r\n    const index = this.featuresArray.indexOf(feature);\r\n    if (index >= 0) {\r\n      this.featuresArray.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /* Add establishment type*/\r\n  addEstablishment(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n    // Add establishment\r\n    if ((value || '').trim() && this.establishmentArray.length < 10) {\r\n      this.establishmentArray.push({ name: value.trim() })\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n  }\r\n  /* Remove establishment type */\r\n  removeEstablishment(establishment: Establishment): void {\r\n    const index = this.establishmentArray.indexOf(establishment);\r\n    if (index >= 0) {\r\n      this.establishmentArray.splice(index, 1);\r\n    }\r\n  }\r\n  /* Add meals */\r\n  addMeals(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n    // Add Meals\r\n    if ((value || '').trim() && this.mealArray.length < 10) {\r\n      this.mealArray.push({ name: value.trim() })\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n  }\r\n  /* Remove meals */\r\n  removeMeals(meal: Meal): void {\r\n    const index = this.mealArray.indexOf(meal);\r\n    if (index >= 0) {\r\n      this.mealArray.splice(index, 1);\r\n    }\r\n  }\r\n  /* Add cuisines*/\r\n  addCuisine(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n    // Add Cuisines\r\n    if ((value || '').trim() && this.cuisineArray.length < 10) {\r\n      this.cuisineArray.push({ name: value.trim() })\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n  }\r\n  /* Remove meals */\r\n  removeCuisines(cuisine: Cuisine): void {\r\n    const index = this.cuisineArray.indexOf(cuisine);\r\n    if (index >= 0) {\r\n      this.cuisineArray.splice(index, 1);\r\n    }\r\n  }\r\n  /* Add restrictions*/\r\n  addRestriction(event: MatChipInputEvent): void {\r\n    const input = event.input;\r\n    const value = event.value;\r\n    // Add Restrictions\r\n    if ((value || '').trim() && this.dietaryArray.length < 10) {\r\n      this.dietaryArray.push({ name: value.trim() })\r\n    }\r\n\r\n    // Reset the input value\r\n    if (input) {\r\n      input.value = '';\r\n    }\r\n  }\r\n  /* Remove restrictions */\r\n  removeRestriction(dietary: Dietary): void {\r\n    const index = this.dietaryArray.indexOf(dietary);\r\n    if (index >= 0) {\r\n      this.dietaryArray.splice(index, 1);\r\n    }\r\n  }\r\n  onImagePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.restaurantForm.patchValue({ image_path: file });\r\n    this.restaurantForm.get('image_path').updateValueAndValidity();\r\n    // console.log(file);\r\n    // console.log(this.restaurantForm)\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      this.imagePreview = reader.result as string;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  }\r\n  /* Get errors */\r\n  public handleError = (controlName: string, errorName: string) => {\r\n    return this.restaurantForm.controls[controlName].hasError(errorName);\r\n  }\r\n  /* Submit book */\r\n  //  submitRestaurantForm() {\r\n  //    // if (this.restaurantForm.invalid) {\r\n  //    //   return;\r\n  //   //  } \r\n  //   console.log(\"pressed1\"); \r\n  //   // shetl valid ===> this.restaurantForm.valid\r\n  //   if (this.restaurantForm) {\r\n  //     console.log(\"pressed\");\r\n  //     this.restaurantApi.AddRestaurant(this.restaurantForm.value).subscribe(res => {\r\n  //       this.ngZone.run(() => this.router.navigateByUrl('/restaurant-list'))\r\n  //     }, (error) => {\r\n  //       console.log(error);\r\n  //     }); \r\n  //   }\r\n  // }\r\n  submitRestaurantForm() { \r\n    this.restaurantApi.AddRestaurant(\r\n      this.restaurantForm.value.name,\r\n      this.restaurantForm.value.image_path,\r\n      this.restaurantForm.value.restaurant_features,\r\n    ).subscribe((event: HttpEvent<any>) => {\r\n      switch (event.type) {\r\n        case HttpEventType.Sent:\r\n          console.log('Request has been made!');\r\n          break;\r\n        case HttpEventType.ResponseHeader:\r\n          console.log('Response header has been received!');\r\n          break;\r\n        \r\n        case HttpEventType.Response:\r\n          console.log('User successfully created!', event.body);\r\n          \r\n          this.router.navigateByUrl('/restaurant-list') \r\n      } \r\n    }) \r\n  }\r\n\r\n}\r\n","<!-- Title group  -->\r\n<div class=\"title-group\">\r\n    <h1 class=\"mat-h1\">Add Restaurant</h1>\r\n    <mat-divider fxFlex=\"1 0\"></mat-divider>\r\n  </div>\r\n   \r\n  <!-- Form -->\r\n  <div class=\"inner-wrapper\">\r\n    <form [formGroup]=\"restaurantForm\" (ngSubmit)=\"submitRestaurantForm()\" #resetRestaurantForm=\"ngForm\" novalidate>\r\n      <!-- Left block -->\r\n      <mat-card>\r\n        <div class=\"controlers-wrapper\">\r\n          <!-- Name -->\r\n          <mat-form-field class=\"example-full-width\">\r\n            <input matInput placeholder=\"Restaurant Name\" formControlName=\"name\">\r\n            <mat-error *ngIf=\"handleError('name', 'required')\">\r\n              You must provide a <strong>restaurant name</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n  \r\n          <!-- Establishments -->\r\n          <mat-form-field class=\"multiple-items\">\r\n            <mat-chip-list #chipList2>\r\n              <mat-chip *ngFor=\"let establishmentArray of establishmentArray\" [selectable]=\"selectable\" [removable]=\"removable\"\r\n                (removed)=\"removeEstablishment(establishmentArray)\">\r\n                {{establishmentArray.name}}\r\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n              </mat-chip>\r\n              <input placeholder=\"Add Establishment Type\" [matChipInputFor]=\"chipList2\"\r\n                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\r\n                (matChipInputTokenEnd)=\"addEstablishment($event)\"> \r\n            </mat-chip-list>\r\n            <i class=\"material-icons tooltip-info\" matTooltip=\"Enter establishment name and press enter to add establishment types\">\r\n              info\r\n            </i>\r\n          </mat-form-field>\r\n  \r\n          <!-- Meals -->\r\n          <mat-form-field class=\"multiple-items\">\r\n            <mat-chip-list #chipList3>\r\n              <mat-chip *ngFor=\"let mealArray of mealArray\" [selectable]=\"selectable\" [removable]=\"removable\"\r\n                (removed)=\"removeMeals(mealArray)\">\r\n                {{mealArray.name}}\r\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n              </mat-chip>\r\n              <input placeholder=\"Add Meals\" [matChipInputFor]=\"chipList3\"\r\n                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\r\n                (matChipInputTokenEnd)=\"addMeals($event)\"> \r\n            </mat-chip-list>\r\n            <i class=\"material-icons tooltip-info\" matTooltip=\"Enter meals name and press enter to add meals\">\r\n              info\r\n            </i>\r\n          </mat-form-field>\r\n               <!-- Cuisines -->\r\n               <mat-form-field class=\"multiple-items\">\r\n                <mat-chip-list #chipList4>\r\n                  <mat-chip *ngFor=\"let cuisineArray of cuisineArray\" [selectable]=\"selectable\" [removable]=\"removable\"\r\n                    (removed)=\"removeCuisines(cuisineArray)\">\r\n                    {{cuisineArray.name}}\r\n                    <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n                  </mat-chip>\r\n                  <input placeholder=\"Add Cuisines\" [matChipInputFor]=\"chipList4\"\r\n                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\r\n                    (matChipInputTokenEnd)=\"addCuisine($event)\"> \r\n                </mat-chip-list>\r\n                <i class=\"material-icons tooltip-info\" matTooltip=\"Enter cuisines name and press enter to add cuisines\">\r\n                  info\r\n                </i>\r\n              </mat-form-field>\r\n                <!-- Dietary Restrictions -->\r\n                <mat-form-field class=\"multiple-items\">\r\n                  <mat-chip-list #chipList5>\r\n                    <mat-chip *ngFor=\"let dietaryArray of dietaryArray\" [selectable]=\"selectable\" [removable]=\"removable\"\r\n                      (removed)=\"removeRestriction(dietaryArray)\">\r\n                      {{dietaryArray.name}}\r\n                      <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n                    </mat-chip>\r\n                    <input placeholder=\"Add Dietary Restrictions\" [matChipInputFor]=\"chipList5\"\r\n                      [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\r\n                      (matChipInputTokenEnd)=\"addRestriction($event)\"> \r\n                  </mat-chip-list>\r\n                  <i class=\"material-icons tooltip-info\" matTooltip=\"Enter restriction name and press enter to add dietary restrictions\">\r\n                    info\r\n                  </i>\r\n                </mat-form-field>\r\n              \r\n        </div>\r\n      </mat-card>\r\n  \r\n      <!-- Right block -->\r\n      <mat-card>\r\n        <div class=\"controlers-wrapper\">\r\n          <!-- Add features -->\r\n          <mat-form-field class=\"multiple-items\">\r\n            <mat-chip-list #chipList>\r\n              <mat-chip *ngFor=\"let featuresArray of featuresArray\" [selectable]=\"selectable\" [removable]=\"removable\"\r\n                (removed)=\"remove(featuresArray)\">\r\n                {{featuresArray.name}}\r\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n              </mat-chip>\r\n              <input placeholder=\"Add restaurant feature\" [matChipInputFor]=\"chipList\"\r\n                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\r\n                (matChipInputTokenEnd)=\"add($event)\" formControlName=\"restaurant_features\">\r\n            </mat-chip-list>\r\n            <i class=\"material-icons tooltip-info\" matTooltip=\"Enter feature name and press enter to add features\">\r\n              info\r\n            </i>\r\n           \r\n          </mat-form-field>\r\n     <!-- Location -->\r\n     <mat-form-field class=\"example-full-width\">\r\n      <input matInput placeholder=\"Restaurant Location\" formControlName=\"location\">\r\n      <mat-error *ngIf=\"handleError('location', 'required')\">\r\n        You must provide a <strong>restaurant location</strong>\r\n      </mat-error>\r\n    </mat-form-field>\r\n   <!-- Phone-->\r\n   <mat-form-field class=\"example-full-width\">\r\n    <input matInput type=\"number\" placeholder=\"Restaurant Phone\" formControlName=\"phone\">\r\n    <mat-error *ngIf=\"handleError('phone', 'required')\">\r\n      You must provide a <strong>restaurant phone</strong>\r\n    </mat-error>\r\n  </mat-form-field>\r\n  \r\n          <!-- Price -->   \r\n          <div class=\"misc-bottom-padding\">\r\n            <mat-label>Price Range:</mat-label>\r\n            <mat-radio-group aria-label=\"Select an option\" formControlName=\"price_range\">\r\n              <mat-radio-button class = \"tp-radio-button\" value=\"Cheap Eats\">Cheap Eats</mat-radio-button>\r\n              <mat-radio-button class = \"tp-radio-button\" value=\"Mid-range\">Mid-range</mat-radio-button>\r\n              <mat-radio-button  class = \"tp-radio-button\" value=\"Fine Dining\">Fine Dining</mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n          <!-- Image -->\r\n            <div>\r\n            <button mat-stroked-button type=\"button\" (click)=\"filePicker.click()\">Pick Image</button>\r\n            <input type=\"file\" #filePicker (change)=\"onImagePicked($event)\">\r\n            </div>\r\n        <div class=\"image-preview\" *ngIf=\"imagePreview !=='' && imagePreview  && restaurantForm.get('image_path').valid\">\r\n          <img [src]=\"imagePreview\" [alt]=\"restaurantForm.value.name\">\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n  \r\n      <!-- Submit & Reset -->\r\n      <mat-card>\r\n        <div class=\"full-wrapper button-wrapper\">\r\n          <div class=\"button-wrapper\">\r\n            <button mat-flat-button color=\"warn\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n    </form>\r\n  </div>\r\n","import { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AngularMaterialModule } from './material.module';\r\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n///Pages\r\nimport { HomeComponent } from './pages/home/home.component';\r\n\r\n\r\n/// Components \r\n   /* Restaurant */\r\nimport { AddRestaurantComponent } from './components/add-restaurant/add-restaurant.component';\r\nimport { UpdateRestaurantComponent } from './components/update-restaurant/update-restaurant.component';\r\nimport { RestaurantsListComponent } from './components/restaurants-list/restaurants-list.component';\r\n    /* Hotel */\r\nimport { AddHotelComponent } from './components/add-hotel/add-hotel.component';\r\nimport { HotelsListComponent } from './components/hotels-list/hotels-list.component';\r\nimport { UpdateHotelComponent } from './components/update-hotel/update-hotel.component';\r\n    /* User */\r\nimport { UsersListComponent } from './components/users-list/users-list.component';\r\n\r\n//auth\r\nimport {LoginComponent} from './auth/login/login.component'\r\nimport {ErrorInterceptor } from './auth/_helpers/error.interceptor';\r\nimport { JwtInterceptor } from './auth/_helpers/jwt.interceptor';\r\nimport { fakeBackendProvider } from './auth/_helpers/fake-backend';\r\n/// api services\r\nimport { ApiService } from './shared/api.service';\r\nimport { Api2Service } from './shared/api2.service';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AddRestaurantComponent,\r\n    UpdateRestaurantComponent,\r\n    RestaurantsListComponent,\r\n    AddHotelComponent,\r\n    HotelsListComponent,\r\n    UpdateHotelComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    UsersListComponent\r\n  \r\n  ],\r\n  imports: [ \r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    AngularMaterialModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n  \r\n  ],\r\n  providers:[{ provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n  { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n  fakeBackendProvider,DatePipe],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\n\r\nimport { AuthenticationService } from '../_services/autentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error = '';\r\n\r\n  constructor(\r\n      private formBuilder: FormBuilder,\r\n      private route: ActivatedRoute,\r\n      private router: Router,\r\n      private authenticationService: AuthenticationService\r\n  ) { \r\n      // redirect to home if already logged in\r\n      if (this.authenticationService.currentUserValue) { \r\n          this.router.navigate(['']);\r\n      }\r\n  }\r\n\r\n  ngOnInit() {\r\n      this.loginForm = this.formBuilder.group({\r\n          username: ['', Validators.required],\r\n          password: ['', Validators.required]\r\n      });\r\n\r\n      // get return url from route parameters or default to '/'\r\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  onSubmit() {\r\n      this.submitted = true;\r\n      console.log(this.loginForm)\r\n      // stop here if form is invalid\r\n      if (this.loginForm.invalid) {\r\n          return;\r\n      }\r\n\r\n      this.loading = true;\r\n      this.authenticationService.login(this.f.username.value, this.f.password.value)\r\n          .pipe(first())\r\n          .subscribe(\r\n              data => {\r\n                  this.router.navigate([this.returnUrl]);\r\n              },\r\n              error => {\r\n                  this.error = error;\r\n                  this.loading = false;\r\n              });\r\n  }\r\n}\r\n","<div class=\"col-md-6 offset-md-3 mt-5\">\r\n    <div class=\"alert alert-info\">\r\n        Username: admin<br />\r\n        Password: admin\r\n    </div>\r\n    <div class=\"card\">\r\n        <h4 class=\"card-header\">Admin login</h4>\r\n        <div class=\"card-body\">\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"username\">Username</label>\r\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n                    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Password</label>\r\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n                    </div>\r\n                </div>\r\n                <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n                    <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n                    Login\r\n                </button>\r\n                <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Restaurant } from './restaurant';\r\nimport { Subject } from \"rxjs\";\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Router } from \"@angular/router\";\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  private restaurants: Restaurant[] = [];\r\n  private restaurantsUpdated = new Subject<Restaurant[]>();\r\n  endpoint: string = 'http://localhost:8000/api/restaurant';\r\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n  constructor(private http: HttpClient,private router: Router) { }\r\n\r\n   // Add restaurant\r\n    // Create User\r\n  //   AddRestaurant(name: string, image_path: File){\r\n  //     const postData = new FormData();\r\n  //   postData.append(\"name\", name);\r\n  //   postData.append(\"image_path\", image_path);\r\n  //   this.http\r\n  //   .post<{ message: string; restaurant: Restaurant }>(\r\n  //     `${this.endpoint}/add-restaurant`,\r\n  //     postData\r\n  //   )\r\n  //   .subscribe(responseData => {\r\n  //     const restaurant: Restaurant = {\r\n  //       //id: responseData.post.id,\r\n  //       name: name,\r\n        \r\n  //       image_path: responseData.restaurant.image_path\r\n  //     };\r\n  //     this.restaurants.push(restaurant);\r\n  //     this.restaurantsUpdated.next([...this.restaurants]);\r\n  //     this.router.navigate([\"restaurant-list\"]);\r\n  //   });\r\n  \r\n  // }\r\n  AddRestaurant(name: string, image_path: File,restaurant_features:[]): Observable<any> {\r\n    var formData: any = new FormData();\r\n    formData.append(\"name\", name);\r\n    formData.append(\"image_path\", image_path);\r\n    formData.append(\"restaurant_features\", restaurant_features);\r\n    return this.http.post<Restaurant>(`${this.endpoint}/add-restaurant`, formData, {\r\n      reportProgress: true,\r\n      observe: 'events'\r\n    })\r\n  }\r\n  //  AddRestaurant(data: Restaurant): Observable<any> {\r\n  //   //const formData: FormData = new FormData();\r\n  //   let API_URL = `${this.endpoint}/add-restaurant`;\r\n  //   //   const postData = new FormData();\r\n  //   //  postData.append(\"image_path\",image_path)\r\n  //   return this.http.post(API_URL, data)\r\n  //     .pipe(\r\n  //       catchError(this.errorMgmt)\r\n  //     )   \r\n  // }\r\n  //Get all restaurants\r\n  \r\n   \r\n  GetRestaurants() {\r\n    return this.http.get(`${this.endpoint}`);\r\n  }\r\n   // Get restaurant\r\n   GetRestaurant(id): Observable<any> {\r\n    let API_URL = `${this.endpoint}/read-restaurant/${id}`;\r\n    return this.http.get(API_URL, { headers: this.headers })\r\n      .pipe(\r\n        map((res: Response) => {\r\n          return res || {} \r\n        }),\r\n        catchError(this.errorMgmt)\r\n      )\r\n  }\r\n    // Update restaurant\r\n    UpdateRestaurant(id, data): Observable<any> {\r\n      let API_URL = `${this.endpoint}/update-restaurant/${id}`;\r\n      return this.http.put(API_URL, data, { headers: this.headers })\r\n        .pipe(\r\n          catchError(this.errorMgmt)\r\n        )\r\n    }\r\n  \r\n    // Delete restaurant\r\n    DeleteRestaurant(id): Observable<any> {\r\n      var API_URL = `${this.endpoint}/delete-restaurant/${id}`;\r\n      return this.http.delete(API_URL)\r\n        .pipe(\r\n          catchError(this.errorMgmt)\r\n        )\r\n    }\r\n  \r\n     // Error handling \r\n  errorMgmt(error: HttpErrorResponse) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { HotelCategory } from './hotel-category';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Api3Service {\r\n  endpoint: string = 'http://localhost:8000/api/hotelCategory';\r\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n  constructor(private http: HttpClient) { }\r\n\r\n  GetHotelCategories() { \r\n    return this.http.get(`${this.endpoint}`);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\n\r\nimport { Admin} from '../_model/admin';\r\n\r\nconst users: Admin[] = [{ id: 1, username: 'admin', password: 'admin', firstName: 'Admin', lastName: 'User' }];\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const { url, method, headers, body } = request;\r\n\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null)\r\n            .pipe(mergeMap(handleRoute))\r\n            .pipe(materialize()) \r\n            .pipe(delay(500))\r\n            .pipe(dematerialize());\r\n\r\n        function handleRoute() {\r\n            switch (true) {\r\n                case url.endsWith('/users/authenticate') && method === 'POST':\r\n                    return authenticate();\r\n                case url.endsWith('/users') && method === 'GET':\r\n                    return getUsers();\r\n                default:\r\n                    // pass through any requests not handled above\r\n                    return next.handle(request);\r\n            }    \r\n        }\r\n\r\n        // route functions\r\n\r\n        function authenticate() {\r\n            const { username, password } = body;\r\n            const user = users.find(x => x.username === username && x.password === password);\r\n            if (!user) return error('Username or password is incorrect');\r\n            return ok({\r\n                id: user.id,\r\n                username: user.username,\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                token: 'fake-jwt-token'\r\n            })\r\n        }\r\n\r\n        function getUsers() {\r\n            if (!isLoggedIn()) return unauthorized();\r\n            return ok(users);\r\n        }\r\n\r\n        // helper functions\r\n\r\n        function ok(body?) {\r\n            return of(new HttpResponse({ status: 200, body }))\r\n        }\r\n\r\n        function error(message) {\r\n            return throwError({ error: { message } });\r\n        }\r\n\r\n        function unauthorized() {\r\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\r\n        }\r\n\r\n        function isLoggedIn() {\r\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\r\n        }\r\n    }\r\n}\r\n\r\nexport let fakeBackendProvider = {\r\n    // use fake backend in place of Http service for backend-less development\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: FakeBackendInterceptor,\r\n    multi: true\r\n};","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../_services/autentication.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","\r\nimport { Component, OnInit, ViewChild, NgZone } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { Api2Service } from './../../shared/api2.service';\r\nimport { Api3Service } from './../../shared/api3.service';\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { HttpEvent, HttpEventType } from '@angular/common/http';\r\nimport { HotelCategory } from 'src/app/shared/hotel-category';\r\n\r\nexport interface Distance {\r\n  mainStreet: number,\r\n  beach: number,\r\n  park: number,\r\n  cityCenter : number\r\n}\r\nexport interface PriceDeals {\r\n  name: string,\r\n    link: string,\r\n    pricePerNight : number\r\n}\r\nexport interface Map {\r\n  latitude: number;\r\n  longitude: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-add-hotel',\r\n  templateUrl: './add-hotel.component.html',\r\n  styleUrls: ['./add-hotel.component.css']\r\n})\r\nexport class AddHotelComponent implements OnInit {\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  styleslist=[\"a\",\"b\",\"c\"]\r\n\r\n  @ViewChild('chipListHotel') chipList;\r\n  @ViewChild('resetHotelForm') myNgForm;\r\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  hotelForm: FormGroup;\r\nimages:string[];\r\ndeals:string[];\r\namenities:string[];\r\nstyle:string[]=[];\r\nmap:Map;\r\nrooms:number;\r\ndistance:Distance;\r\nPricedeals:PriceDeals[]=[];\r\nlangaugeSpoken:string[];\r\nselected:string;\r\ncheckedStyles:any = [];\r\nHotelCategoryData:any=[];\r\n  constructor(public fb: FormBuilder,\r\n    public router: Router,\r\n    private ngZone: NgZone,\r\n    public hotelApi: Api2Service,\r\n    public hotelCategoryApi: Api3Service) { \r\n\r\n      this.hotelCategoryApi.GetHotelCategories().subscribe(data => {\r\n        this.HotelCategoryData=data\r\n        console.log(this.HotelCategoryData);\r\n      })\r\n    }\r\n\r\n  ngOnInit(): void {\r\n    this.HotelFormData();\r\n  }\r\n\r\n  HotelFormData() { \r\n    this.hotelForm = this.fb.group({\r\n      deals: [this.deals],\r\n      amenities: [this.amenities],\r\n      style: [this.checkedStyles],\r\n      name: ['', [Validators.required]],\r\n      map: [this.map],\r\n      rooms:[, [Validators.required]],\r\n      distance:[this.distance],\r\n      Pricedeals:[this.Pricedeals],\r\n      langaugeSpoken:[this.langaugeSpoken]\r\n    })\r\n  }\r\n\r\n    /* Add dynamic styles */\r\n    // addStyle(event: MatChipInputEvent): void {\r\n    //   const input = event.input;\r\n    //   const value = event.value;\r\n    //   // Add style\r\n    //   if ((value || '').trim() && this.style.length < 5) {\r\n    //     this.style.push(value.trim())\r\n    //   }\r\n    //   // Reset the input value\r\n    //   if (input) {\r\n    //     input.value = '';\r\n    //   }\r\n    // }\r\n\r\n      /* Remove style */\r\n  // removeStyle(index:number): void {\r\n  //   const index = this.style.indexOf();\r\n  //   if (index >= 0) {\r\n  //     this.style.splice(index, 1);\r\n  //   }\r\n  // } \r\n  changeOutput(event){\r\n    console.log(event); \r\n    if(event.checked){\r\n      this.checkedStyles.push(event.source.value);\r\n      this.style.push(event.source.value)\r\n      console.log( this.checkedStyles);\r\n      console.log(this.style);\r\n    }else{\r\n      this.checkedStyles=this.checkedStyles.filter((p)=>p!==event.source.value);\r\n      this.style=this.style.filter((p)=>p!==event.source.value)\r\n      console.log(this.checkedStyles);\r\n      console.log(this.style);\r\n    }\r\n  }\r\n\r\n  /* Get errors */\r\n  public handleError = (controlName: string, errorName: string) => {\r\n    return this.hotelForm.controls[controlName].hasError(errorName);\r\n  }  \r\n\r\n  /* Submit hotel */\r\n  // submitHotelForm() { \r\n  //   this.hotelApi.AddHotel(\r\n  //    this.hotelForm.value\r\n  //   ).subscribe((event: HttpEvent<any>) => {\r\n  //     switch (event.type) {\r\n  //       case HttpEventType.Sent:\r\n  //         console.log('Request has been made!');\r\n  //         break;\r\n  //       case HttpEventType.ResponseHeader:\r\n  //         console.log('Response header has been received!');\r\n  //         break;\r\n        \r\n  //       case HttpEventType.Response:\r\n  //         console.log('User successfully created!', event.body);\r\n          \r\n  //         this.router.navigateByUrl('/hotel-list') \r\n  //     } \r\n  //   }) \r\n  // }      \r\n  submitHotelForm() {\r\n    \r\n      // console.log(this.style)\r\n    if (this.hotelForm) {/*  */\r\n    //   this.checkedStyles.forEach(item => {  \r\n    //     this.style.push(item);  \r\n    // });\r\n      this.hotelApi.AddHotel(this.hotelForm.value.name,this.hotelForm.value.style)\r\n      console.log(this.hotelForm.value.style)\r\n      // this.hotelApi.AddHotel(this.hotelForm.value).subscribe(res => {\r\n      //   this.ngZone.run(() => this.router.navigateByUrl('/hotel-list'))\r\n      // });\r\n      /* this.hotelApi.AddHotel(\r\n        this.hotelForm.value.name,\r\n        this.hotelForm.value.style\r\n      ).subscribe((event: HttpEvent<any>) => {\r\n        switch (event.type) {\r\n          case HttpEventType.Sent:\r\n            console.log('Request has been made!');\r\n            break;\r\n          case HttpEventType.ResponseHeader:\r\n            console.log('Response header has been received!');\r\n            break;\r\n          \r\n          case HttpEventType.Response:\r\n            console.log('User successfully created!', event.body);\r\n            \r\n            this.router.navigateByUrl('/hotel-list') \r\n        } \r\n      })  */\r\n    }\r\n  \r\n    }\r\n  \r\n\r\n}\r\n","<!-- Title group  -->\r\n<div class=\"title-group\">\r\n    <h1 class=\"mat-h1\">Add Hotel</h1>\r\n    <mat-divider fxFlex=\"1 0\"></mat-divider>\r\n  </div>\r\n  \r\n  <!-- Form -->\r\n  <div class=\"inner-wrapper\">\r\n    <form [formGroup]=\"hotelForm\" (ngSubmit)=\"submitHotelForm()\" #resetHotelForm=\"ngForm\" novalidate>\r\n      <!-- Left block -->\r\n      <mat-card>\r\n        <div class=\"controlers-wrapper\">\r\n        <!-- Name -->\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput placeholder=\"Hotel Name\" formControlName=\"name\">\r\n          <mat-error *ngIf=\"handleError('name', 'required')\">\r\n            You must provide a <strong>hotel name</strong>\r\n          </mat-error> \r\n        </mat-form-field>\r\n  \r\n          <!-- Email -->\r\n          <!-- <mat-form-field class=\"example-full-width\">\r\n            <input matInput placeholder=\"Student email\" formControlName=\"student_email\">\r\n            <mat-error *ngIf=\"handleError('student_email', 'required')\">\r\n              You must provide a<strong>student email</strong>\r\n            </mat-error>\r\n          </mat-form-field> -->\r\n  \r\n          <!-- Section -->\r\n          <!-- <mat-form-field>\r\n            <mat-label>Section</mat-label>\r\n            <mat-select [(value)]=\"selected\" formControlName=\"section\">\r\n              <mat-option [value]=\"sectioinArray\" *ngFor=\"let sectioinArray of SectioinArray\">{{sectioinArray}}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"handleError('section', 'required')\">\r\n              Section is required\r\n            </mat-error>\r\n          </mat-form-field>-->\r\n        </div>\r\n      </mat-card> \r\n  \r\n      <!-- Right block -->\r\n       <mat-card>\r\n        <div class=\"controlers-wrapper\"> \r\n          <!-- Add styles -->\r\n          <!-- <mat-form-field class=\"multiple-items\">\r\n            <mat-chip-list #chipListHotel>\r\n              <mat-chip *ngFor=\"let style of style\" [selectable]=\"selectable\" [removable]=\"removable\"\r\n                (removed)=\"removeStyle(style)\">\r\n                {{style}}\r\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\r\n              </mat-chip>\r\n              <input placeholder=\"Add Style\" [matChipInputFor]=\"chipListHotel\"\r\n                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\r\n                (matChipInputTokenEnd)=\"addStyle($event)\">\r\n            </mat-chip-list>\r\n            <i class=\"material-icons tooltip-info\" matTooltip=\"Enter style name and press enter to add styles\">\r\n              info\r\n            </i>\r\n          </mat-form-field> -->\r\n  \r\n          <!-- Date of birth -->\r\n          <!-- <mat-form-field>\r\n            <input matInput readonly [matDatepicker]=\"picker\" placeholder=\"Date of birth\" formControlName=\"dob\"\r\n              (dateChange)=\"formatDate($event)\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"handleError('dob', 'required')\">\r\n              Date of birth is required\r\n            </mat-error>\r\n          </mat-form-field> -->\r\n\r\n\r\n          <!-- Style -->\r\n           <div class=\"misc-bottom-padding\">\r\n            <mat-label>Style:</mat-label>\r\n            <section  *ngFor=\"let elem of styleslist\" > \r\n                <mat-checkbox  [value]=\"elem\" (change)=\"changeOutput($event)\" >{{elem}}</mat-checkbox>\r\n            </section>\r\n          </div> \r\n          <div class=\"misc-bottom-padding\">\r\n            <mat-label>Deals:</mat-label>\r\n            <section  *ngFor=\"let elem of HotelCategoryData[0].deals; let i=index\"  > \r\n                <mat-checkbox  [value]=\"elem.name\" (change)=\"changeOutput($event)\">{{elem.name}}</mat-checkbox>\r\n            </section>\r\n          </div> \r\n         </div>\r\n      </mat-card>\r\n  \r\n      <!-- Submit & Reset -->\r\n      <mat-card>\r\n        <div class=\"full-wrapper button-wrapper\">\r\n          <div class=\"button-wrapper\">\r\n            <button mat-flat-button color=\"warn\">Submit</button>\r\n          </div>\r\n        </div>\r\n      </mat-card>\r\n    </form>\r\n  </div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../_services/autentication.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.authenticationService.logout();\r\n                location.reload(true);\r\n            }\r\n\r\n            const error = err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Component,EventEmitter, ViewChild, OnInit } from '@angular/core';\r\nimport { User } from './../../shared/user';\r\nimport { ApiUserService } from './../../shared/api-user.service';\r\nimport { MatPaginator} from '@angular/material/paginator';\r\nimport {MatTableDataSource } from '@angular/material/table';\r\nimport {DatePipe} from '@angular/common';\r\nimport {FormControl} from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {map, startWith} from 'rxjs/operators';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n\r\n@Component({\r\n  selector: 'app-users-list',\r\n  templateUrl: './users-list.component.html',\r\n  styleUrls: ['./users-list.component.css']\r\n})\r\nexport class UsersListComponent implements OnInit{\r\n  UserData: any = [];\r\n  dataSource: MatTableDataSource<User>;\r\n  @ViewChild(MatPaginator,{ static: false }) paginator: MatPaginator;\r\n  displayedColumns: string[] = ['FirstName', 'LastName', 'Username','Joining_date','Phone_Number', 'Home_Airport','Email', 'action'];\r\n   \r\n   @ViewChild(MatSort,{ static: false }) sort: MatSort;\r\n\r\n/*    myControl = new FormControl();\r\n  options: string[] = ['test', 'waaa', 'd'];\r\n  filteredOptions: Observable<string[]>; */\r\n  \r\n  constructor(private userApi: ApiUserService,\r\n    public datepipe:DatePipe,) {\r\n    this.userApi.GetUsers().subscribe(data => {\r\n      this.UserData = data;\r\n      this.dataSource = new MatTableDataSource<User>(this.UserData);\r\n      setTimeout(() => {\r\n        this.dataSource.paginator = this.paginator;\r\n         this.dataSource.sort = this.sort;\r\n      }, 0);\r\n    })\r\n  }\r\n\r\n  ngOnInit() { \r\n  /*    this.filteredOptions = this.myControl.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => this._filter(value))\r\n      ); */\r\n  }\r\n\r\n  DeleteUser(index: number, e){\r\n    if(window.confirm('Are you sure')) {\r\n      const data = this.dataSource.data;\r\n      data.splice((this.paginator.pageIndex * this.paginator.pageSize) + index, 1);\r\n      this.dataSource.data = data;\r\n      this.userApi.DeleteUser(e._id).subscribe()\r\n    }\r\n  }\r\n\r\n/*   private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n\r\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\r\n  }\r\n */\r\n public doFilter = (value: string) => {\r\n    this.dataSource.filter = value.trim().toLocaleLowerCase();\r\n  }\r\n}\r\n","<!-- Title group  -->\r\n<div class=\"title-group\">\r\n    <h1 class=\"mat-h1\">Users List</h1>\r\n    <mat-divider fxFlex=\"1 0\"></mat-divider>\r\n  </div>\r\n  \r\n  <p *ngIf=\"UserData.length <= 0\" class=\"no-data\">There is no user added yet!</p>\r\n  \r\n  <div class=\"container\" *ngIf=\"UserData.length > 0\">\r\n<!--   <form class=\"example-form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <mat-label>Search</mat-label>\r\n    <input type=\"text\"\r\n           placeholder=\"Enter Name\"\r\n           aria-label=\"name\"\r\n           matInput\r\n           [formControl]=\"myControl\"\r\n           [matAutocomplete]=\"auto\">\r\n    <mat-autocomplete #auto=\"matAutocomplete\">\r\n      <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n        {{option}}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n</form> -->\r\n\r\n\r\n  <mat-form-field fxFlex=\"40%\">\r\n    <input matInput type=\"text\" (keyup)=\"doFilter($any($event.target).value)\"  placeholder=\"Filter\">\r\n  </mat-form-field>\r\n\r\n    <div class=\"mat-elevation-z8\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n        <ng-container matColumnDef=\"FirstName\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> FirstName </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.FirstName}} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"LastName\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> LastName </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.LastName}} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"Username\">\r\n          <th mat-header-cell *matHeaderCellDef> Username</th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.Username}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Joining_date\">  \r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Joining Date</th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{this.datepipe.transform(element.Joining_date,'yyyy-MM-dd')}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"Phone_Number\">  \r\n            <th mat-header-cell *matHeaderCellDef> Mobile Phone</th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.Phone_Number}} </td>\r\n          </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"Home_Airport\">\r\n          <th mat-header-cell *matHeaderCellDef> Home Airport </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.Home_Airport}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"Email\"> \r\n            <th mat-header-cell *matHeaderCellDef> Email </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.Email}} </td>\r\n          </ng-container>\r\n\r\n  \r\n        <ng-container matColumnDef=\"action\">\r\n          <th mat-header-cell *matHeaderCellDef> Action </th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index;\">\r\n            <button mat-raised-button color=\"accent\" (click)=\"DeleteUser(i, element)\">Delete</button>\r\n          </td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n  \r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n    </div>\r\n  </div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AddHotelComponent } from './components/add-hotel/add-hotel.component';\r\nimport {AddRestaurantComponent} from './components/add-restaurant/add-restaurant.component'\r\nimport { HotelsListComponent } from './components/hotels-list/hotels-list.component';\r\nimport { RestaurantsListComponent } from './components/restaurants-list/restaurants-list.component';\r\nimport { UpdateHotelComponent } from './components/update-hotel/update-hotel.component';\r\nimport { UpdateRestaurantComponent } from './components/update-restaurant/update-restaurant.component';\r\nimport { AppComponent } from './app.component';\r\n\r\n/// auth\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { UsersListComponent } from './components/users-list/users-list.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: 'login',component: LoginComponent},\r\n  { path: '', pathMatch: 'full', redirectTo: 'home' },\r\n /*  { path: 'home',component: HomeComponent},\r\n  { path: 'add-restaurant', component: AddRestaurantComponent, canActivate: [AuthGuard] },\r\n  { path: 'update-restaurant/:id', component: UpdateRestaurantComponent,canActivate: [AuthGuard,] },\r\n  { path: 'restaurant-list', component: RestaurantsListComponent,canActivate: [AuthGuard,] },\r\n  { path: 'add-hotel', component: AddHotelComponent,canActivate: [AuthGuard,] },\r\n  { path: 'update-hotel/:id', component: UpdateHotelComponent,canActivate: [AuthGuard,] },\r\n  { path: 'hotel-list', component: HotelsListComponent,canActivate: [AuthGuard,] }\r\n  ] */\r\n  { path: '',component: HomeComponent, canActivate: [AuthGuard] ,\r\n  children: [\r\n  { path: '', pathMatch: 'full', redirectTo: '' },\r\n  { path: 'add-restaurant', component: AddRestaurantComponent },\r\n  { path: 'update-restaurant/:id', component: UpdateRestaurantComponent },\r\n  { path: 'restaurant-list', component: RestaurantsListComponent },\r\n  { path: 'add-hotel', component: AddHotelComponent },\r\n  { path: 'update-hotel/:id', component: UpdateHotelComponent },\r\n  { path: 'hotel-list', component: HotelsListComponent },\r\n  { path: 'user-list', component: UsersListComponent },\r\n  ]\r\n  }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers:[AuthGuard]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\n\r\n\r\n@NgModule({\r\n   imports: [\r\n      CommonModule,\r\n      MatButtonModule,\r\n      MatToolbarModule,\r\n      MatIconModule,\r\n      MatSidenavModule,\r\n      MatBadgeModule,\r\n      MatListModule,\r\n      MatGridListModule,\r\n      MatFormFieldModule,\r\n      MatInputModule,\r\n      MatSelectModule,\r\n      MatRadioModule,\r\n      MatDatepickerModule,\r\n      MatNativeDateModule,\r\n      MatChipsModule,\r\n      MatTooltipModule,\r\n      MatTableModule,\r\n      MatPaginatorModule,\r\n      MatAutocompleteModule,\r\n      MatSortModule,\r\n      MatCheckboxModule\r\n\r\n   ],\r\n   exports: [\r\n      MatButtonModule,\r\n      MatToolbarModule,\r\n      MatIconModule,\r\n      MatSidenavModule,\r\n      MatBadgeModule,\r\n      MatListModule,\r\n      MatGridListModule,\r\n      MatInputModule,\r\n      MatFormFieldModule,\r\n      MatSelectModule,\r\n      MatRadioModule,\r\n      MatDatepickerModule,\r\n      MatChipsModule,\r\n      MatTooltipModule,\r\n      MatTableModule,\r\n      MatPaginatorModule,\r\n      MatAutocompleteModule,\r\n      MatSortModule,\r\n      MatCheckboxModule\r\n      \r\n   ],\r\n   providers: [\r\n      MatDatepickerModule,\r\n   ]\r\n})\r\n\r\nexport class AngularMaterialModule { }","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError} from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiUserService {\r\n  endpoint: string = 'http://localhost:8000/api/user';\r\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\r\n  constructor(private http: HttpClient) { }\r\n\r\n   // Get all users\r\n  GetUsers() {\r\n    return this.http.get(`${this.endpoint}`);\r\n  }\r\n  \r\n     // Delete user\r\n     DeleteUser(id): Observable<any> {\r\n      var API_URL = `${this.endpoint}/delete-user/${id}`;\r\n      return this.http.delete(API_URL)\r\n        .pipe(\r\n          catchError(this.errorMgmt)\r\n        )\r\n    }\r\n  \r\n     // Error handling \r\n  errorMgmt(error: HttpErrorResponse) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n\r\n\r\n\r\n  ","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}